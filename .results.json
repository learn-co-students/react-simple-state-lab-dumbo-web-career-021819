{
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 9,
    "pending": 0,
    "failures": 1,
    "start": "2019-05-08T16:25:29.706Z",
    "end": "2019-05-08T16:25:29.768Z",
    "duration": 62
  },
  "tests": [
    {
      "title": "uses a default 'values' prop of an array with 10 items",
      "fullTitle": "<Matrix /> uses a default 'values' prop of an array with 10 items",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "each sub-array of the default 'values' prop is an array",
      "fullTitle": "<Matrix /> each sub-array of the default 'values' prop is an array",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "each sub-array of the default values prop is filled with 10 hex color string equal to: '#F00'",
      "fullTitle": "<Matrix /> each sub-array of the default values prop is filled with 10 hex color string equal to: '#F00'",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is a correctly defined and exported React component which renders a <div> with a className of 'cell'",
      "fullTitle": "<Cell /> is a correctly defined and exported React component which renders a <div> with a className of 'cell'",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has a state key of 'color'",
      "fullTitle": "<Cell /> has a state key of 'color'",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "state.color is initially set to the 'value' prop passed from Matrix",
      "fullTitle": "<Cell /> state.color is initially set to the 'value' prop passed from Matrix",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has an event listener for clicks on the <div> (don't forget: 'onClick' in React!)",
      "fullTitle": "<Cell /> has an event listener for clicks on the <div> (don't forget: 'onClick' in React!)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has an event listener that, when clicked, calls this.setState() once (make sure you aren't setting state directly, but instead using the component's 'setState' method)",
      "fullTitle": "<Cell /> has an event listener that, when clicked, calls this.setState() once (make sure you aren't setting state directly, but instead using the component's 'setState' method)",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has an event listener that, when clicked, sets state's 'color' key to a value of '#333'",
      "fullTitle": "<Cell /> has an event listener that, when clicked, sets state's 'color' key to a value of '#333'",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "sets the <div>'s inline style attribute to 'style={{backgroundColor: this.state.color}}'",
      "fullTitle": "<Cell /> sets the <div>'s inline style attribute to 'style={{backgroundColor: this.state.color}}'",
      "duration": 5,
      "currentRetry": 0,
      "err": {
        "message": "expected '#fff' to equal '#0f0'",
        "showDiff": true,
        "actual": "#fff",
        "expected": "#0f0",
        "stack": "AssertionError: expected '#fff' to equal '#0f0'\n    at Context.<anonymous> (test/1-Cell.test.js:64:56)"
      }
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "sets the <div>'s inline style attribute to 'style={{backgroundColor: this.state.color}}'",
      "fullTitle": "<Cell /> sets the <div>'s inline style attribute to 'style={{backgroundColor: this.state.color}}'",
      "duration": 5,
      "currentRetry": 0,
      "err": {
        "message": "expected '#fff' to equal '#0f0'",
        "showDiff": true,
        "actual": "#fff",
        "expected": "#0f0",
        "stack": "AssertionError: expected '#fff' to equal '#0f0'\n    at Context.<anonymous> (test/1-Cell.test.js:64:56)"
      }
    }
  ],
  "passes": [
    {
      "title": "uses a default 'values' prop of an array with 10 items",
      "fullTitle": "<Matrix /> uses a default 'values' prop of an array with 10 items",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "each sub-array of the default 'values' prop is an array",
      "fullTitle": "<Matrix /> each sub-array of the default 'values' prop is an array",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "each sub-array of the default values prop is filled with 10 hex color string equal to: '#F00'",
      "fullTitle": "<Matrix /> each sub-array of the default values prop is filled with 10 hex color string equal to: '#F00'",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is a correctly defined and exported React component which renders a <div> with a className of 'cell'",
      "fullTitle": "<Cell /> is a correctly defined and exported React component which renders a <div> with a className of 'cell'",
      "duration": 4,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has a state key of 'color'",
      "fullTitle": "<Cell /> has a state key of 'color'",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "state.color is initially set to the 'value' prop passed from Matrix",
      "fullTitle": "<Cell /> state.color is initially set to the 'value' prop passed from Matrix",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has an event listener for clicks on the <div> (don't forget: 'onClick' in React!)",
      "fullTitle": "<Cell /> has an event listener for clicks on the <div> (don't forget: 'onClick' in React!)",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has an event listener that, when clicked, calls this.setState() once (make sure you aren't setting state directly, but instead using the component's 'setState' method)",
      "fullTitle": "<Cell /> has an event listener that, when clicked, calls this.setState() once (make sure you aren't setting state directly, but instead using the component's 'setState' method)",
      "duration": 5,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "has an event listener that, when clicked, sets state's 'color' key to a value of '#333'",
      "fullTitle": "<Cell /> has an event listener that, when clicked, sets state's 'color' key to a value of '#333'",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    }
  ]
}